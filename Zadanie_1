Чтобы задать имя хоста в системе, вводим команду

ISP
hostnamectl set-hostname isp.au-team.irpo; exec bash
HQ-RTR
hostnamectl set-hostname hq-rtr.au-team.irpo; exec bash
BR-RTR
hostnamectl set-hostname br-rtr.au-team.irpo; exec bash
HQ-SRV
hostnamectl set-hostname hq-srv.au-team.irpo; exec bash
HQ-CLI
hostnamectl set-hostname hq-cli.au-team.irpo; exec bash
BR-SRV
hostnamectl set-hostname br-srv.au-team.irpo; exec bash

Настройка ISP
http://каб-220.рф/ru/demo-2025/modul-1/modul-1-1

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: yes
    eth1:
      addresses:
        - 172.16.4.1/28
    eth2:
      addresses:
        - 172.16.5.1/28

Настройка HQ-RTR

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 172.16.4.2/28
      gateway4: 172.16.4.1
      nameservers:
        addresses:
          - 77.88.8.8

Настройка HQ-SRV

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 192.168.100.2/26
      gateway4: 192.168.100.1

Настройка BR-RTR

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 172.16.5.2/28
      gateway4: 172.16.5.1
      nameservers:
        addresses:
          - 77.88.8.8
    eth1:
      addresses:
        - 192.168.200.1/27

Настройка BR-SRV

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 192.168.200.2/27
      gateway4: 192.168.200.1

Применение конфигураций:
sudo netplan try
sudo netplan apply

Включение пересылки IP‑пакетов (IP forwarding):
sudo nano /etc/sysctl.conf
net.ipv4.ip_forward=1
sudo sysctl -p

Настройка NAT с использованием iptables
Очистите текущие правила iptables (чтобы избежать конфликтов):
sudo iptables -F
sudo iptables -t nat -F

Добавьте правило маскарадинга (NAT) для ISP eth0:
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

Проверка правил:
sudo iptables -t nat -L -v
sudo iptables -L -v

Сохранение правил iptables
sudo apt install iptables-persistent -y

#Сохраните текущие правила:
sudo iptables-save | sudo tee /etc/iptables/rules.v4
#Проверьте, что правила загружаются при старте системы:
sudo systemctl enable netfilter-persistent
sudo systemctl start netfilter-persisten

Адресация сетевых интерфейсов
ip -c --br a

Создание пользователя sshuser на серверах HQ-SRV и BR-SRV
useradd sshuser -u 1010 -U
passwd sshuser
P@ssw0rd
sudo usermod -aG sudo sshuser
sudo visudo
sshuser ALL=(ALL) NOPASSWD: ALL

Создание пользователя net_admin на маршрутизаторах HQ-RTR и BR-RTR:
sudo useradd net_admin -U
sudo passwd net_admin
P@$$word
sudo usermod -aG sudo net_admin
sudo visudo
net_admin ALL=(ALL) NOPASSWD: ALL






Примечание: Если при выполнении команд появляется ошибка «sudo: unable to resolve host br-rtr.au-team.irpo: Temporary failure in name resolution», откройте файл /etc/hosts и убедитесь, что там есть строка, связывающая IP-адрес с именем хоста, например:

bash
Copy
Edit
127.0.1.1   br-rtr.au-team.irpo br-rtr


1. Установка Open vSwitch
Обновите список пакетов:

bash
Copy
Edit
sudo apt update
Установите пакет openvswitch-switch:

bash
Copy
Edit
sudo apt install openvswitch-switch -y
Убедитесь, что служба запущена и добавлена в автозагрузку:

bash
Copy
Edit
sudo systemctl enable --now openvswitch-switch
2. Создание виртуального коммутатора (моста)
Создайте мост с именем hq-sw:
bash
Copy
Edit
sudo ovs-vsctl add-br hq-sw
3. Добавление физических портов и назначение тегов VLAN
На HQ-RTR физические интерфейсы подключены следующим образом:

ens19 – подключён к серверу HQ-SRV (VLAN ID 100);
ens20 – подключён к клиенту HQ-CLI (VLAN ID 200);
ens21 – используется для управления (VLAN ID 999).
Добавляем их в мост с указанием соответствующего тега:

Добавление порта ens19 с VLAN 100:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens19 tag=100
Добавление порта ens20 с VLAN 200:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens20 tag=200
Добавление порта ens21 с VLAN 999:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens21 tag=999
4. Создание внутренних (internal) портов для доступа к VLAN
Чтобы назначать IP-адреса для каждой подсети, создаём внутренние интерфейсы на мосту. При этом каждому порту присваивается нужный тег и тип internal.

Создание внутреннего порта для VLAN 100 (доступ для HQ-SRV):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan100 tag=100 -- set interface vlan100 type=internal
Создание внутреннего порта для VLAN 200 (доступ для HQ-CLI):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan200 tag=200 -- set interface vlan200 type=internal
Создание внутреннего порта для VLAN 999 (управление):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan999 tag=999 -- set interface vlan999 type=internal
5. Перезапуск сервисов и подъем моста
Перезапустите службу Open vSwitch (хотя перезапуск обычно не требуется, если изменения внесены через ovs-vsctl, для уверенности можно выполнить):

bash
Copy
Edit
sudo systemctl restart openvswitch-switch
Если используется NetworkManager, можно перезапустить и его:

bash
Copy
Edit
sudo systemctl restart NetworkManager
Поднимите интерфейс моста:

bash
Copy
Edit
sudo ip link set hq-sw up
6. Назначение IP-адресов внутренним интерфейсам
Назначьте IP-адреса для управления и доступа к VLAN согласно требованиям:

Для внутреннего порта vlan100 (подсеть HQ-RTR ↔ HQ-SRV, подсеть 192.168.100.0/26):

bash
Copy
Edit
sudo ip addr add 192.168.100.1/26 dev vlan100
Для внутреннего порта vlan200 (подсеть HQ-RTR ↔ HQ-CLI, подсеть 192.168.100.64/28):

bash
Copy
Edit
sudo ip addr add 192.168.100.65/28 dev vlan200
Для внутреннего порта vlan999 (подсеть управления, подсеть 192.168.100.80/29):

bash
Copy
Edit
sudo ip addr add 192.168.100.81/29 dev vlan999
7. Проверка конфигурации
Проверьте статус моста и созданных портов:

bash
Copy
Edit
sudo ovs-vsctl show
Убедитесь, что интерфейсы подняты и IP-адреса назначены:

bash
Copy
Edit
ip a












Ниже приведена полная инструкция для настройки безопасного удалённого доступа на серверах HQ‑SRV и BR‑SRV под управлением Debian 10.

> **Примечание по SELinux:**  
> На Debian 10 SELinux по умолчанию обычно не активирован (используется AppArmor). Если SELinux всё же включён в вашей системе, выполните шаг 1. Если SELinux не используется, шаг 1 можно пропустить.

---

## 1. Настройка SELinux (если он включён)

### Вариант 1: Разрешить порт 2024 для SSH  
1. Убедитесь, что команда `semanage` доступна. Если команда отсутствует, установите необходимые пакеты:
   ```bash
   sudo apt update
   sudo apt install policycoreutils selinux-utils -y
   ```
2. Добавьте порт 2024 для SSH:
   ```bash
   sudo semanage port -a -t ssh_port_t -p tcp 2024
   ```
3. Переведите SELinux в режим разрешения (или временно отключите):
   ```bash
   sudo setenforce 0
   ```

### Вариант 2: Перевести SELinux в режим уведомлений  
1. Отредактируйте файл конфигурации SELinux:
   ```bash
   sudo nano /etc/selinux/config
   ```
2. Найдите строку:
   ```
   SELINUX=enforcing
   ```
   и измените её на:
   ```
   SELINUX=permissive
   ```
3. Сохраните файл и выполните:
   ```bash
   sudo setenforce 0
   ```

---

## 2. Настройка SSH-сервера

### 2.1. Редактирование файла конфигурации SSH  
Откройте файл `/etc/ssh/sshd_config`:
```bash
sudo nano /etc/ssh/sshd_config
```
Внесите следующие изменения:

1. **Изменение порта:**  
   Найдите строку с портом (обычно это строка с `#Port 22`) и измените её:
   ```plaintext
   Port 2024
   ```
2. **Разрешить подключения только для пользователя sshuser:**  
   Добавьте или отредактируйте строку:
   ```plaintext
   AllowUsers sshuser
   ```
3. **Ограничить количество попыток ввода пароля:**  
   Найдите строку с директивой `MaxAuthTries` (по умолчанию она может быть закомментирована) и измените её:
   ```plaintext
   MaxAuthTries 2
   ```
4. **Настройка баннера:**  
   Найдите строку:
   ```plaintext
   #Banner none
   ```
   и измените её на:
   ```plaintext
   Banner /etc/ssh-banner
   ```

Сохраните изменения и выйдите из редактора (Ctrl+O, Enter, Ctrl+X).

### 2.2. Создание файла баннера  
Создайте файл `/etc/ssh-banner`:
```bash
sudo nano /etc/ssh-banner
```
Добавьте в файл следующий текст:
```plaintext
Authorized access only
```
Сохраните изменения и закройте файл.

### 2.3. Применение изменений  
Перезапустите SSH-сервис, чтобы новые настройки вступили в силу:
```bash
sudo systemctl restart sshd
```
или, если используется классическая команда на Debian:
```bash
sudo service ssh restart
```

---

## 3. Проверка настроек

1. **Подключение с клиента:**  
   Попробуйте подключиться с другого устройства (например, с HQ‑CLI) по новому порту 2024:
   ```bash
   ssh -p 2024 sshuser@<IP_адрес_сервера>
   ```
2. **Проверка лимита попыток:**  
   После двух неверных попыток парольный сеанс должен разорваться.
3. **Проверка баннера:**  
   При установлении SSH-соединения должен отображаться баннер «Authorized access only».

---

Эта инструкция обеспечивает настройку безопасного удалённого доступа на серверах HQ‑SRV и BR‑SRV (Debian 10) с использованием нестандартного порта 2024, разрешением подключения только для пользователя `sshuser`, ограничением попыток ввода пароля до двух и выводом баннера.







Настройка GRE-туннеля на HQ-RTR
sudo ip tunnel add tun1 mode gre local 172.16.4.2 remote 172.16.5.2 ttl 64
sudo ip addr add 10.10.0.1/30 dev tun1
sudo ip link set tun1 up

Настройка GRE-туннеля на BR-RTR
sudo ip tunnel add tun1 mode gre local 172.16.5.2 remote 172.16.4.2 ttl 64
sudo ip addr add 10.10.0.2/30 dev tun1
sudo ip link set tun1 up

4. Проверка работы туннеля
ip -c a show tun1
ping -I tun1 10.10.0.2
ping -I tun1 10.10.0.1

















