Чтобы задать имя хоста в системе, вводим команду

ISP
hostnamectl set-hostname isp.au-team.irpo; exec bash
HQ-RTR
hostnamectl set-hostname hq-rtr.au-team.irpo; exec bash
BR-RTR
hostnamectl set-hostname br-rtr.au-team.irpo; exec bash
HQ-SRV
hostnamectl set-hostname hq-srv.au-team.irpo; exec bash
HQ-CLI
hostnamectl set-hostname hq-cli.au-team.irpo; exec bash
BR-SRV
hostnamectl set-hostname br-srv.au-team.irpo; exec bash

Настройка ISP
http://каб-220.рф/ru/demo-2025/modul-1/modul-1-1

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: yes
    eth1:
      addresses:
        - 172.16.4.1/28
    eth2:
      addresses:
        - 172.16.5.1/28

Настройка HQ-RTR

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 172.16.4.2/28
      gateway4: 172.16.4.1
      nameservers:
        addresses:
          - 77.88.8.8

Настройка HQ-SRV

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 192.168.100.2/26
      gateway4: 192.168.100.1

Настройка BR-RTR

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 172.16.5.2/28
      gateway4: 172.16.5.1
      nameservers:
        addresses:
          - 77.88.8.8
    eth1:
      addresses:
        - 192.168.200.1/27

Настройка BR-SRV

network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      addresses:
        - 192.168.200.2/27
      gateway4: 192.168.200.1

Применение конфигураций:
sudo netplan try
sudo netplan apply

Включение пересылки IP‑пакетов (IP forwarding):
sudo nano /etc/sysctl.conf
net.ipv4.ip_forward=1
sudo sysctl -p

Настройка NAT с использованием iptables
Очистите текущие правила iptables (чтобы избежать конфликтов):
sudo iptables -F
sudo iptables -t nat -F

Добавьте правило маскарадинга (NAT) для ISP eth0:
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

Проверка правил:
sudo iptables -t nat -L -v
sudo iptables -L -v

Сохранение правил iptables
sudo apt install iptables-persistent -y

#Сохраните текущие правила:
sudo iptables-save | sudo tee /etc/iptables/rules.v4
#Проверьте, что правила загружаются при старте системы:
sudo systemctl enable netfilter-persistent
sudo systemctl start netfilter-persisten

Адресация сетевых интерфейсов
ip -c --br a

Создание пользователя sshuser на серверах HQ-SRV и BR-SRV
useradd sshuser -u 1010 -U
passwd sshuser
P@ssw0rd
sudo usermod -aG sudo sshuser
sudo visudo
sshuser ALL=(ALL) NOPASSWD: ALL

Создание пользователя net_admin на маршрутизаторах HQ-RTR и BR-RTR:
sudo useradd net_admin -U
sudo passwd net_admin
P@$$word
sudo usermod -aG sudo net_admin
sudo visudo
net_admin ALL=(ALL) NOPASSWD: ALL






Примечание: Если при выполнении команд появляется ошибка «sudo: unable to resolve host br-rtr.au-team.irpo: Temporary failure in name resolution», откройте файл /etc/hosts и убедитесь, что там есть строка, связывающая IP-адрес с именем хоста, например:

bash
Copy
Edit
127.0.1.1   br-rtr.au-team.irpo br-rtr


1. Установка Open vSwitch
Обновите список пакетов:

bash
Copy
Edit
sudo apt update
Установите пакет openvswitch-switch:

bash
Copy
Edit
sudo apt install openvswitch-switch -y
Убедитесь, что служба запущена и добавлена в автозагрузку:

bash
Copy
Edit
sudo systemctl enable --now openvswitch-switch
2. Создание виртуального коммутатора (моста)
Создайте мост с именем hq-sw:
bash
Copy
Edit
sudo ovs-vsctl add-br hq-sw
3. Добавление физических портов и назначение тегов VLAN
На HQ-RTR физические интерфейсы подключены следующим образом:

ens19 – подключён к серверу HQ-SRV (VLAN ID 100);
ens20 – подключён к клиенту HQ-CLI (VLAN ID 200);
ens21 – используется для управления (VLAN ID 999).
Добавляем их в мост с указанием соответствующего тега:

Добавление порта ens19 с VLAN 100:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens19 tag=100
Добавление порта ens20 с VLAN 200:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens20 tag=200
Добавление порта ens21 с VLAN 999:

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw ens21 tag=999
4. Создание внутренних (internal) портов для доступа к VLAN
Чтобы назначать IP-адреса для каждой подсети, создаём внутренние интерфейсы на мосту. При этом каждому порту присваивается нужный тег и тип internal.

Создание внутреннего порта для VLAN 100 (доступ для HQ-SRV):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan100 tag=100 -- set interface vlan100 type=internal
Создание внутреннего порта для VLAN 200 (доступ для HQ-CLI):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan200 tag=200 -- set interface vlan200 type=internal
Создание внутреннего порта для VLAN 999 (управление):

bash
Copy
Edit
sudo ovs-vsctl add-port hq-sw vlan999 tag=999 -- set interface vlan999 type=internal
5. Перезапуск сервисов и подъем моста
Перезапустите службу Open vSwitch (хотя перезапуск обычно не требуется, если изменения внесены через ovs-vsctl, для уверенности можно выполнить):

bash
Copy
Edit
sudo systemctl restart openvswitch-switch
Если используется NetworkManager, можно перезапустить и его:

bash
Copy
Edit
sudo systemctl restart NetworkManager
Поднимите интерфейс моста:

bash
Copy
Edit
sudo ip link set hq-sw up
6. Назначение IP-адресов внутренним интерфейсам
Назначьте IP-адреса для управления и доступа к VLAN согласно требованиям:

Для внутреннего порта vlan100 (подсеть HQ-RTR ↔ HQ-SRV, подсеть 192.168.100.0/26):

bash
Copy
Edit
sudo ip addr add 192.168.100.1/26 dev vlan100
Для внутреннего порта vlan200 (подсеть HQ-RTR ↔ HQ-CLI, подсеть 192.168.100.64/28):

bash
Copy
Edit
sudo ip addr add 192.168.100.65/28 dev vlan200
Для внутреннего порта vlan999 (подсеть управления, подсеть 192.168.100.80/29):

bash
Copy
Edit
sudo ip addr add 192.168.100.81/29 dev vlan999
7. Проверка конфигурации
Проверьте статус моста и созданных портов:

bash
Copy
Edit
sudo ovs-vsctl show
Убедитесь, что интерфейсы подняты и IP-адреса назначены:

bash
Copy
Edit
ip a







1. Настройка SSH-сервера
1.1. Редактирование файла конфигурации SSH
Откройте файл /etc/ssh/sshd_config в текстовом редакторе:

bash
Copy
Edit
sudo nano /etc/ssh/sshd_config
Внесите следующие изменения (если какие-либо директивы уже присутствуют, отредактируйте их):

Изменение порта:
Найдите строку (возможно, закомментированную):

bash
Copy
Edit
#Port 22
и измените её на:

Port 2024
Разрешение подключения только для пользователя sshuser:
Добавьте (или отредактируйте) строку:

nginx
Copy
Edit
AllowUsers sshuser
Ограничение количества попыток авторизации:
Найдите директиву MaxAuthTries (если она закомментирована, раскомментируйте) и измените значение:

nginx
Copy
Edit
MaxAuthTries 2
Настройка баннера:
Найдите строку:

bash
Copy
Edit
#Banner none
и измените её на:

bash
Copy
Edit
Banner /etc/ssh-banner
Сохраните изменения (Ctrl+O, Enter) и выйдите из редактора (Ctrl+X).

1.2. Создание файла баннера
Создайте файл /etc/ssh-banner, в котором будет содержаться текст баннера:

bash
Copy
Edit
sudo nano /etc/ssh-banner
Впишите строку:


------------------------------------------------------------
------------------------------------------------------------

Authorized access only!

------------------------------------------------------------
------------------------------------------------------------


pgsql
Copy
Edit
Authorized access only
Сохраните и закройте файл.

1.3. Перезапуск SSH-сервера
Чтобы изменения вступили в силу, перезапустите службу SSH:

bash
Copy
Edit
sudo systemctl restart sshd
или, если используется классическая команда:

bash
Copy
Edit
sudo service ssh restart



Проверка настроек
Подключение по SSH:
С другого устройства (например, с HQ‑CLI) выполните подключение к серверу по порту 2024:

bash
Copy
Edit
ssh -p 2024 sshuser@<IP_адрес_сервера>





Настройка HQ-RTR
Так как в РЕД ОС используется NetworkManager - следовательно переходим в nmtui:

# nmtui
Производим настройку

Выбираем «Изменить подключение»
Выбираем «Добавить»
Выбираем «IP-туннель
Задаём понятные имена «Имя профиля» и «Устройство»
«Режим работы» выбираем «GRE»
«Родительский» указываем интерфейс в сторону ISP (ens18)
задаём «Локальный IP» (IP на интерфейсе HQ-RTR в сторону IPS 172.16.4.2)
задаём «Удалённый IP» (IP на интерфейсе BR-RTR в сторону ISP 172.16.5.2)
переходим к «КОНФИГУРАЦИЯ IPv4»
задаём адрес IPv4 для туннеля (10.10.0.1/30)
1.6-001.gif

Для корректной работы протокола динамической маршрутизации требуется увеличить параметр TTL на интерфейсе туннеля:

# nmcli connection modify tun1 ip-tunnel.ttl 64
Активируем (перезагружаем) интерфейс tun1

Проверяем:

ip -c --br a
1.6-002.png

Настройка BR-RTR
Настройка GRE – туннеля на BR-RTR производится аналогично HQ-RTR

# nmtui
Производим настройку

Выбираем «Изменить подключение»
Выбираем «Добавить»
Выбираем «IP-туннель
Задаём понятные имена «Имя профиля» и «Устройство»
«Режим работы» выбираем «GRE»
«Родительский» указываем интерфейс в сторону ISP (ens18)
задаём «Локальный IP» (IP на интерфейсе BR-RTR в сторону IPS 172.16.5.2)
задаём «Удалённый IP» (IP на интерфейсе HQ-RTR в сторону ISP 172.16.4.2)
переходим к «КОНФИГУРАЦИЯ IPv4»
задаём адрес IPv4 для туннеля (10.10.0.2/30)
Для корректной работы протокола динамической маршрутизации требуется увеличить параметр TTL на интерфейсе туннеля:

# nmcli connection modify tun1 ip-tunnel.ttl 64
Активируем (перезагружаем) интерфейс tun1

Проверяем:

ip -c a





Настройка GRE-туннеля на HQ-RTR
sudo ip tunnel add tun1 mode gre local 172.16.4.2 remote 172.16.5.2 ttl 64
sudo ip addr add 10.10.0.1/30 dev tun1
sudo ip link set tun1 up

Настройка GRE-туннеля на BR-RTR
sudo ip tunnel add tun1 mode gre local 172.16.5.2 remote 172.16.4.2 ttl 64
sudo ip addr add 10.10.0.2/30 dev tun1
sudo ip link set tun1 up

4. Проверка работы туннеля
ip -c a show tun1
ping -I tun1 10.10.0.2
ping -I tun1 10.10.0.1






Установка DHCP-сервера
Обновите список пакетов и установите isc-dhcp-server:

bash
Copy
Edit
sudo apt update
sudo apt install isc-dhcp-server -y
Проверьте, что пакет установлен корректно:

bash
Copy
Edit
dpkg -l | grep isc-dhcp-server
2. Настройка файла конфигурации DHCP
Откройте файл конфигурации:

bash
Copy
Edit
sudo nano /etc/dhcp/dhcpd.conf
Измените (или добавьте) следующий блок для нужной подсети. В данном примере используется подсеть 192.168.100.64/28 (маска 255.255.255.240), где:

Диапазон выдачи – от 192.168.100.66 до 192.168.100.78 (адрес 192.168.100.1 – адрес маршрутизатора HQ-RTR – исключён из пула)
DNS-сервер – адрес сервера HQ-SRV (192.168.100.2)
Шлюз по умолчанию – адрес маршрутизатора HQ-RTR (192.168.100.1)
DNS-суффикс – "au-team.irpo"
Время аренды: default lease – 600 сек, max lease – 7200 сек
Пример содержимого:

dhcp
Copy
Edit
subnet 192.168.100.64 netmask 255.255.255.240 {
  range 192.168.100.66 192.168.100.78;
  option domain-name-servers 192.168.100.2;
  option domain-name "au-team.irpo";
  option routers 192.168.100.1;
  default-lease-time 600;
  max-lease-time 7200;
}
Сохраните файл (Ctrl+O, Enter) и выйдите (Ctrl+X).

3. Указание интерфейса для DHCP-сервера
Откройте файл /etc/default/isc-dhcp-server:

bash
Copy
Edit
sudo nano /etc/default/isc-dhcp-server
Найдите строку, начинающуюся с INTERFACESv4 и укажите имя сетевого интерфейса, через который будет работать DHCP-сервер (например, если это eth0):

bash
Copy
Edit
INTERFACESv4="eth0"
Если у вас используется другой интерфейс, замените eth0 на соответствующее имя.

Сохраните изменения и выйдите из редактора.

4. Запуск и автозапуск службы DHCP
Запустите службу:

bash
Copy
Edit
sudo systemctl enable --now isc-dhcp-server
Проверьте статус службы:

bash
Copy
Edit
sudo systemctl status isc-dhcp-server
В выводе должно быть указано, что служба запущена и работает без ошибок.

5. Проверка работы DHCP-сервера
На клиентской машине (например, HQ-CLI) перезагрузите или обновите IP-конфигурацию (например, командой:

bash
Copy
Edit
sudo dhclient -r && sudo dhclient
или перезагрузкой интерфейса).

Проверьте, что клиент получил IP-адрес из заданного диапазона (например, с помощью команды:

bash
Copy
Edit
ip a
или

bash
Copy
Edit
ifconfig











