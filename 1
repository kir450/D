
1. Удаление пакетов с помощью apt purge
Чтобы удалить пакеты вместе с конфигурационными файлами, выполните следующую команду (от имени root или с sudo):

bash
Копировать
Редактировать
sudo apt purge -y samba samba-ad-dc winbind libpam-winbind libnss-winbind libpam-krb5 krb5-config krb5-user krb5-kdc
Опция purge гарантирует, что будут удалены и конфигурационные файлы пакетов.

2. Автоматическое удаление зависимостей
После удаления пакетов выполните команду для очистки неиспользуемых зависимостей:

bash
Копировать
Редактировать
sudo apt autoremove -y
3. Удаление оставшихся файлов и директорий
Иногда после удаления пакетов остаются файлы или каталоги, созданные пользователями или вручную настроенные. Проверьте и, при необходимости, удалите следующие каталоги:

Конфигурационные файлы Samba (если они не были удалены):
bash
Копировать
Редактировать
sudo rm -rf /etc/samba
Файлы Kerberos (если нужны):
bash
Копировать
Редактировать
sudo rm -f /etc/krb5.conf
sudo rm -rf /etc/krb5.conf.d/
Логи и данные, связанные с данными пакетами (например, в /var/log/samba, /var/lib/krb5kdc):
bash
Копировать
Редактировать
sudo rm -rf /var/log/samba
sudo rm -rf /var/lib/krb5kdc
Примечание: Будьте осторожны с удалением файлов – убедитесь, что они действительно принадлежат удаляемым пакетам и вам они не нужны для восстановления конфигураций.

4. Проверка
Чтобы убедиться, что пакеты и их конфигурационные файлы удалены, можно выполнить:

bash
Копировать
Редактировать
dpkg -l | grep -E "samba|krb5|winbind"




































Инструкция по настройке доменного контроллера Samba на BR-SRV
1. Подготовка окружения
BR-SRV: Debian 10, IP: 192.168.200.2, DNS: 192.168.100.2 (HQ-SRV).

HQ-CLI: Debian 10, получает IP через DHCP (VLAN200).

Доменное имя: au-team.irpo.

2. Установка Samba в качестве доменного контроллера
bash
Copy
# Обновление системы и установка пакетов
sudo apt update && sudo apt upgrade -y
sudo apt install -y samba krb5-user winbind smbclient
Настройка Kerberos (укажите при запросе):

Copy
Default Kerberos version 5 realm: AU-TEAM.IRPO
Kerberos servers: br-srv.au-team.irpo
Administrative server: br-srv.au-team.irpo
3. Создание домена
bash
Copy
# Создание домена
sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.bak
sudo samba-tool domain provision \
  --realm=AU-TEAM.IRPO \
  --domain=AU-TEAM \
  --adminpass=MyAdminPass123! \
  --server-role=dc \
  --use-rfc2307

# Запуск служб
sudo systemctl stop smbd nmbd winbind
sudo systemctl unmask samba-ad-dc
sudo systemctl enable samba-ad-dc
sudo systemctl start samba-ad-dc
4. Создание группы hq
bash
Copy
sudo samba-tool group add hq
5. Импорт пользователей из файла /opt/users.csv
5.1. Создайте файл /opt/users.csv:

csv
Copy
Username,Password
user1.hq,P@ssw0rd1
user2.hq,P@ssw0rd2
user3.hq,P@ssw0rd3
user4.hq,P@ssw0rd4
user5.hq,P@ssw0rd5
5.2. Скрипт для импорта:

bash
Copy
sudo nano /opt/import_users.sh
Содержимое скрипта:

bash
Copy
#!/bin/bash
tail -n +2 /opt/users.csv | while IFS=, read -r user pass; do
  sudo samba-tool user create "$user" "$pass"
  sudo samba-tool group addmembers hq "$user"
done
Запуск:

bash
Copy
sudo chmod +x /opt/import_users.sh
sudo /opt/import_users.sh
6. Настройка прав sudo для группы hq
bash
Copy
echo '%hq ALL=(ALL) NOPASSWD: /bin/cat, /bin/grep, /usr/bin/id' | sudo tee /etc/sudoers.d/hq
sudo chmod 440 /etc/sudoers.d/hq
sudo visudo -cf /etc/sudoers.d/hq  # Проверка синтаксиса
7. Присоединение HQ-CLI к домену
На HQ-CLI:

bash
Copy
# Установка утилит
sudo apt install -y realmd sssd oddjob-mkhomedir

# Присоединение к домену
sudo realm join --user=Administrator au-team.irpo
Пароль администратора: MyAdminPass123!.

8. Проверка работоспособности
На BR-SRV:

bash
Copy
# Список пользователей
sudo samba-tool user list

# Проверка группы
sudo samba-tool group listmembers hq

# Тест аутентификации
smbclient -L localhost -U user1.hq
На HQ-CLI:

bash
Copy
# Проверка домена
sudo realm list

# Тест входа и прав
su - user1.hq
sudo cat /etc/passwd  # Должно работать
sudo apt update       # Должно быть запрещено
9. Дополнительные настройки
Синхронизация времени:

bash
Copy
sudo timedatectl set-ntp true
Фаервол:

bash
Copy
sudo ufw allow 135,139,445,389,636/tcp
sudo ufw allow 53,88,123,137,138/udp
Итог
Домен AU-TEAM.IRPO настроен на BR-SRV.

Пользователи user1.hq–user5.hq созданы и добавлены в группу hq.

Группе hq разрешено выполнять cat, grep, id через sudo.

HQ-CLI присоединен к домену.














































































1. Установка Docker и docker-compose (Debian 10)
1.1. Установка Docker CE:
Следуйте официальным инструкциям для установки Docker на Debian. Пример:

bash
Копировать
Редактировать
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io
1.2. Установка docker-compose:

bash
Копировать
Редактировать
sudo apt install -y docker-compose
1.3. Запуск и автозапуск Docker:

bash
Копировать
Редактировать
sudo systemctl enable --now docker
Проверьте статус:

bash
Копировать
Редактировать
sudo systemctl status docker
2. Создание файла docker-compose (wiki.yml)
2.1. Перейдите в домашний каталог пользователя (например, sshuser) на BR‑SRV:

bash
Копировать
Редактировать
cd /home/sshuser
2.2. Создайте файл wiki.yml:

bash
Копировать
Редактировать
nano wiki.yml
2.3. Вставьте следующее содержимое (отредактируйте пути и переменные, если необходимо):



version: "3.7"

services:
  wiki:
    container_name: wiki
    image: mediawiki:latest
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - mariadb
    volumes:
      - images:/var/www/html/images
      # - ./LocalSettings.php:/var/www/html/LocalSettings.php

  mariadb:
    container_name: mariadb
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_DATABASE: mediawiki
      MYSQL_USER: wiki
      MYSQL_PASSWORD: WikiP@ssw0rd
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - dbvolume:/var/lib/mariadb

volumes:
  dbvolume:
    external: true
  images: {}











 services:
  MediaWiki:
    container_name: wiki
    image: mediawiki
    restart: always
    ports: 
      - 8080:80 
    links:
      - database
    volumes:
      - images:/var/www/html/images
      # - ./LocalSettings.php:/var/www/html/LocalSettings.php
  database:
    container_name: mariadb 
    image: mariadb  
    environment:
      MYSQL_DATABASE: mediawiki
      MYSQL_USER: wiki
      MYSQL_PASSWORD: WikiP@ssw0rd 
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - dbvolume:/var/lib/mariadb 
volumes:
  dbvolume:
      external: true
  images:   












Пояснения:

mariadb – контейнер базы данных с созданием базы mediawiki и пользователем wiki с паролем WikiP@ssw0rd. Хранение данных осуществляется в volume dbvolume.
wiki – контейнер с MediaWiki, который будет доступен извне по порту 8080 (на стороне контейнера используется порт 80). Переменные окружения передают параметры подключения к базе данных.
Файл LocalSettings.php будет смонтирован из /home/sshuser/LocalSettings.php в контейнер (это позволит, после завершения установки через веб-интерфейс, сохранить настройки на хосте).
Сохраните файл (Ctrl+O, Enter, Ctrl+X).

3. Создание volume для базы данных
На BR‑SRV выполните:

bash
Копировать
Редактировать
sudo docker volume create dbvolume
Проверьте:

bash
Копировать
Редактировать
sudo docker volume ls
4. Развертывание стека контейнеров
В каталоге, где находится файл wiki.yml, выполните:

bash
Копировать
Редактировать
sudo docker-compose -f wiki.yml up -d
Проверьте, что контейнеры запущены:

bash
Копировать
Редактировать
sudo docker ps
5. Настройка MediaWiki через веб-интерфейс
5.1. Откройте браузер на клиентской машине (например, HQ‑CLI) и перейдите по адресу:

cpp
Копировать
Редактировать
http://<IP BR-SRV>:8080
где <IP BR-SRV> — IP-адрес сервера BR‑SRV (например, 192.168.200.2, если указан в таблице адресации).

5.2. Следуйте инструкциям установщика MediaWiki:

Выберите язык.
Проверьте внешнее подключение.
Введите параметры подключения к базе данных, используя:
Хост БД: mariadb
Имя базы: mediawiki
Пользователь: wiki
Пароль: WikiP@ssw0rd
Продолжите установку.
5.3. После успешной установки MediaWiki будет сгенерирован файл LocalSettings.php. Скачайте его на HQ‑CLI и передайте на BR‑SRV в каталог /home/sshuser, где находится файл wiki.yml.

Пример копирования с HQ‑CLI (если используется scp):

bash
Копировать
Редактировать
scp -P 2024 /path/to/LocalSettings.php sshuser@<IP BR-SRV>:/home/sshuser/
(Замените <IP BR-SRV> и порт, если необходимо.)

6. Обновление стека
После того как файл LocalSettings.php размещен в /home/sshuser на BR‑SRV, перезапустите стек контейнеров, чтобы изменения вступили в силу:

bash
Копировать
Редактировать
sudo docker-compose -f wiki.yml stop
sudo docker-compose -f wiki.yml up -d
Проверьте доступность MediaWiki, перейдя в браузере по адресу:

cpp
Копировать
Редактировать
http://<IP BR-SRV>:8080
7. Очистка (опционально)
Чтобы удалить/очистить все данные Docker (контейнеры, образы, тома и сети), можно выполнить следующие команды:

bash
Копировать
Редактировать
sudo docker stop $(sudo docker ps -qa)
sudo docker rm $(sudo docker ps -qa)
sudo docker rmi -f $(sudo docker images -qa)
sudo docker volume rm $(sudo docker volume ls -q)
sudo docker network rm $(sudo docker network ls -q)
sudo docker system prune -f

































Полная инструкция по настройке доменного контроллера Samba на BR-SRV
1. Подготовка окружения
BR-SRV: Debian 10, IP: 192.168.200.2, DNS: 192.168.100.2 (HQ-SRV).

HQ-CLI: Debian 10, получает IP по DHCP из VLAN200.

Доменное имя: au-team.irpo.

2. Установка Samba в режиме доменного контроллера
bash
Copy
# Обновление системы и установка пакетов
sudo apt update && sudo apt upgrade -y
sudo apt install -y samba krb5-user winbind smbclient

# Настройка Kerberos (укажите доменное имя)
sudo nano /etc/krb5.conf
Ответы при настройке Kerberos:

[libdefaults]
    default_realm = AU-TEAM.IRPO
    dns_lookup_realm = false
    dns_lookup_kdc = true
    ticket_lifetime = 24h
    renew_lifetime = 7d
    forwardable = true

[realms]
    AU-TEAM.IRPO = {
        kdc = br-srv.au-team.irpo
        admin_server = br-srv.au-team.irpo
        default_domain = au-team.irpo
    }

[domain_realm]
    .au-team.irpo = AU-TEAM.IRPO
    au-team.irpo = AU-TEAM.IRPO

[logging]
    kdc = FILE:/var/log/krb5/kdc.log
    admin_server = FILE:/var/log/krb5/admin.log
    default = FILE:/var/log/krb5/krb5lib.log



    
Copy
Default Kerberos version 5 realm: AU-TEAM.IRPO
Kerberos servers: br-srv.au-team.irpo
Administrative server: br-srv.au-team.irpo
3. Создание домена
bash
Copy
# Резервное копирование конфига
sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.bak

# Создание домена
sudo samba-tool domain provision \
  --realm=AU-TEAM.IRPO \
  --domain=AU-TEAM \
  --adminpass=MyAdminPass123! \
  --server-role=dc \
  --use-rfc2307

# Запуск служб
sudo systemctl stop smbd nmbd winbind
sudo systemctl unmask samba-ad-dc
sudo systemctl enable samba-ad-dc
sudo systemctl start samba-ad-dc
4. Создание группы hq
bash
Copy
sudo samba-tool group add hq
5. Импорт пользователей из файла /opt/users.csv
5.1. Создайте файл /opt/users.csv:

csv
Copy
Username,Password
user1.hq,P@ssw0rd1
user2.hq,P@ssw0rd2
user3.hq,P@ssw0rd3
user4.hq,P@ssw0rd4
user5.hq,P@ssw0rd5
5.2. Импорт пользователей:

bash
Copy
sudo samba-tool user import /opt/users.csv --csv

# Добавление всех пользователей из CSV в группу hq
awk -F, 'NR>1 {print $1}' /opt/users.csv | while read user; do
  sudo samba-tool group addmembers hq "$user"
done
6. Настройка прав sudo для группы hq
bash
Copy
# Создайте файл правил sudo
echo '%hq ALL=(ALL) NOPASSWD: /bin/cat, /bin/grep, /usr/bin/id' | sudo tee /etc/sudoers.d/hq
sudo chmod 440 /etc/sudoers.d/hq

# Проверка синтаксиса
sudo visudo -cf /etc/sudoers.d/hq
7. Присоединение HQ-CLI к домену
На HQ-CLI:

bash
Copy
# Установка утилит
sudo apt install -y realmd sssd oddjob-mkhomedir

# Присоединение к домену
sudo realm join --user=Administrator au-team.irpo
Пароль администратора: MyAdminPass123!.

8. Проверка работоспособности
На BR-SRV:

bash
Copy
# Список пользователей
sudo samba-tool user list

# Проверка группы
sudo samba-tool group listmembers hq

# Тест аутентификации
smbclient -L localhost -U user1.hq
На HQ-CLI:

bash
Copy
# Проверка домена
sudo realm list

# Вход под пользователем
su - user1.hq

# Проверка прав
sudo cat /etc/passwd  # Разрешено
sudo apt update       # Запрещено
9. Устранение неполадок
Ошибки DNS: Убедитесь, что BR-SRV указан как DNS-сервер на HQ-CLI.

Синхронизация времени:

bash
Copy
sudo timedatectl set-ntp true
Фаервол: Разрешите трафик для доменных служб:

bash
Copy
sudo ufw allow 135,139,445,389,636/tcp
sudo ufw allow 53,88,123,137,138/udp




Шаг 1. Подготовка на BR‑SRV (источнике ключей)
1.1. Убедитесь, что для пользователя sshuser создан домашний каталог и у него правильные права
Если вы планируете генерировать ключи для пользователя sshuser на BR‑SRV, необходимо убедиться, что его домашний каталог существует и имеет корректные права. Если каталог отсутствует или права неверны, выполните следующие команды от имени root:

bash
Копировать
Редактировать
sudo mkdir -p /home/sshuser/.ssh
sudo chown -R sshuser:sshuser /home/sshuser
sudo chmod 700 /home/sshuser/.ssh
1.2. Переключитесь на пользователя sshuser
Чтобы сгенерировать ключи от имени пользователя sshuser, выполните:

bash
Копировать
Редактировать
su - sshuser
Теперь вы должны оказаться в домашнем каталоге пользователя sshuser (обычно /home/sshuser).

1.3. Генерация пары SSH‑ключей
Запустите команду генерации ключей:

bash
Копировать
Редактировать
ssh-keygen -t rsa
При появлении запроса:

"Enter file in which to save the key" — нажмите Enter, чтобы использовать значение по умолчанию: /home/sshuser/.ssh/id_rsa
При запросе пароля можно оставить его пустым (просто нажмите Enter дважды), если политика безопасности позволяет не задавать пароль.
После этого в каталоге /home/sshuser/.ssh должны появиться файлы:

id_rsa (закрытый ключ)
id_rsa.pub (открытый ключ)
Шаг 2. Копирование SSH‑ключей на целевые машины
Для копирования открытого ключа на целевые машины используйте команду ssh-copy-id. Если на целевых машинах SSH-сервер слушает на нестандартном порту, используйте опцию -p.

2.1. Копирование ключа на HQ‑SRV (SSH порт изменен, например, 2024)
На BR‑SRV (под пользователем, у которого сгенерированы ключи) выполните:

bash
Копировать
Редактировать
ssh-copy-id -p 2024 sshuser@192.168.100.2
При этом вам будет предложено ввести пароль для пользователя sshuser на HQ‑SRV.

2.2. Копирование ключа на HQ‑CLI
Если на HQ‑CLI используется пользователь user (или иной, укажите корректное имя):

bash
Копировать
Редактировать
ssh-copy-id user@192.168.100.66
2.3. Копирование ключа на HQ‑RTR
Если на HQ‑RTR используется пользователь net_admin:

bash
Копировать
Редактировать
ssh-copy-id net_admin@172.16.4.2
2.4. Копирование ключа на BR‑RTR
Если на BR‑RTR используется пользователь net_admin:

bash
Копировать
Редактировать
ssh-copy-id net_admin@172.16.5.2
После выполнения каждой из команд открытый ключ будет добавлен в файл ~/.ssh/authorized_keys на целевой машине, что позволит подключаться без ввода пароля.

Шаг 3. Проверка подключения
После успешного копирования ключей проверьте возможность подключения с BR‑SRV к каждой машине без запроса пароля. Например:

bash
Копировать
Редактировать
ssh -p 2024 sshuser@192.168.100.2
ssh user@192.168.100.66
ssh net_admin@172.16.4.2
ssh net_admin@172.16.5.2
