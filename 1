1. Проверка и создание домашнего каталога на целевой машине
Шаг 1.1. Подключитесь к целевой машине, куда вы собираетесь скопировать SSH‑ключ (например, на BR‑RTR или другой сервер), используя root или другого пользователя с правами sudo.

bash
Копировать
Редактировать
ssh root@<целевой_IP>
Шаг 1.2. Проверьте, существует ли домашний каталог для пользователя sshuser:

bash
Копировать
Редактировать
ls -ld /home/sshuser
Если каталог существует, в выводе вы увидите информацию о каталоге.
Если вывод содержит сообщение "No such file or directory", значит, каталога нет.
Шаг 1.3. Если каталога нет, создайте его и задайте правильные права:

bash
Копировать
Редактировать
sudo mkdir -p /home/sshuser
sudo chown sshuser:sshuser /home/sshuser
sudo chmod 700 /home/sshuser
Примечание: Если требуется, можно скопировать файлы из стандартного каталога шаблонов /etc/skel, чтобы создать базовую конфигурацию:

bash
Копировать
Редактировать
sudo cp -r /etc/skel/. /home/sshuser/
sudo chown -R sshuser:sshuser /home/sshuser/
2. Копирование SSH‑ключей с исходной машины
На исходной машине (например, BR‑SRV или другой, откуда вы запускаете команду) выполните следующее:

Шаг 2.1. Убедитесь, что у пользователя, от которого запускается команда (например, root или sshuser) есть пара SSH‑ключей. Например, проверьте:

bash
Копировать
Редактировать
ls -l ~/.ssh/id_rsa.pub
Если ключ не создан, выполните:

bash
Копировать
Редактировать
ssh-keygen -t rsa
Шаг 2.2. Скопируйте открытый ключ на целевую машину (где создан домашний каталог /home/sshuser). Если целевой SSH-сервер слушает на нестандартном порту (например, 2024), используйте опцию -p. Например:

bash
Копировать
Редактировать
sudo ssh-copy-id -p 2024 sshuser@<целевой_IP>
Пример: Если целевой IP — 192.168.100.2, выполните:

bash
Копировать
Редактировать
sudo ssh-copy-id -p 2024 sshuser@192.168.100.2
После этого система попытается подключиться к целевой машине, запросит пароль для пользователя sshuser (если ключ ещё не установлен) и добавит открытый ключ в файл /home/sshuser/.ssh/authorized_keys.

3. Проверка
После завершения копирования SSH‑ключа:

Попробуйте подключиться к целевой машине без запроса пароля:

bash
Копировать
Редактировать
ssh -p 2024 sshuser@<целевой_IP>
Если всё настроено правильно, вы войдете без запроса пароля.

Если возникает ошибка, проверьте:

Существует ли каталог /home/sshuser и правильны ли права доступа (должны быть 700 для каталога и 600 для закрытого ключа, 644 для открытого).
Правильно ли настроен SSH-сервер на целевой машине (например, порт, AllowUsers и т.д.).





















1. Редактирование конфигурационного файла chrony
На Debian 10 основной конфигурационный файл chrony находится по пути /etc/chrony/chrony.conf.

Откройте его для редактирования:

bash
Копировать
Редактировать
sudo nano /etc/chrony/chrony.conf
Внесите следующие изменения (пример для HQ‑RTR как NTP‑сервера):

conf
Копировать
Редактировать
# /etc/chrony/chrony.conf - Конфигурация NTP-сервера на HQ-RTR

# Использование локальных часов как резервного источника времени с заданным stratum
local stratum 5

# Файл для хранения данных о дрейфе часов
driftfile /var/lib/chrony/chrony.drift

# Включаем синхронизацию аппаратных часов с системным временем
rtcsync

# Разрешаем клиентам из внутренних сетей синхронизироваться с этим сервером
allow 192.168.100.0/26
allow 192.168.100.64/28
allow 192.168.200.0/27

# Каталог для логов chrony
logdir /var/log/chrony

# Если необходимо сделать резкое изменение времени при большой разнице (например, при запуске):
makestep 1.0 3

# (Опционально) Закомментируйте внешние источники времени, если хотите работать только с локальным источником.
# pool 2.debian.pool.ntp.org iburst
Сохраните изменения (Ctrl+O, Enter) и выйдите из редактора (Ctrl+X).

2. Применение изменений
Перезапустите службу chrony, чтобы новые настройки вступили в силу:

bash
Копировать
Редактировать
sudo systemctl restart chrony
sudo systemctl enable chrony
Проверьте статус службы:

bash
Копировать
Редактировать
sudo systemctl status chrony
3. Проверка работы NTP-сервера
На HQ‑RTR выполните:

Проверка источников времени:

bash
Копировать
Редактировать
chronyc sources
В выводе вы должны увидеть, что сервер использует локальный источник (локальные часы) с заданным stratum 5.

Проверка подключённых клиентов:
Если на HQ‑RTR есть NTP-клиенты, можно выполнить:

bash
Копировать
Редактировать
chronyc clients
Это покажет, какие устройства синхронизируются с вашим сервером.

4. Настройка клиентов
На машинах-клиентах (HQ‑SRV, HQ‑CLI, BR‑RTR, BR‑SRV):

Установите chrony (если ещё не установлен):

bash
Копировать
Редактировать
sudo apt update
sudo apt install -y chrony
Отредактируйте файл /etc/chrony/chrony.conf на клиентах:

Закомментируйте или удалите существующие строки с pool ….

Добавьте строку, указывающую на HQ‑RTR как NTP‑сервер. Например, если IP HQ‑RTR равен 172.16.4.2 (или другой, в зависимости от вашей таблицы адресации), добавьте:

conf
Копировать
Редактировать
server 172.16.4.2 iburst
Примените изменения:

bash
Копировать
Редактировать
sudo systemctl restart chrony
sudo systemctl enable chrony
Проверьте, что клиент синхронизируется с вашим NTP‑сервером:

bash
Копировать
Редактировать
chronyc sources
Итог
На HQ‑RTR настроен chrony как NTP‑сервер с локальным stratum 5, с разрешением подключения для внутренних подсетей (192.168.100.0/26, 192.168.100.64/28, 192.168.200.0/27).
На клиентах chrony настроен на получение времени от HQ‑RTR (с помощью строки server 172.16.4.2 iburst или другого IP, соответствующего вашему серверу).
Изменения применяются через перезапуск службы, а команда chronyc sources позволяет убедиться в корректной синхронизации.
Таким образом, после выполнения этих шагов, ваша система синхронизации времени будет работать корректно.
